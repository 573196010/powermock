#labels Usage
== Suppressing Unwanted Behavior ==

=== Quick summary ===
  # Use the `@RunWith(PowerMockRunner.class)` annotation at the class-level of the test case.
  # Use the `@PrepareForTest(ClassWithEvilChildConstructor.class)` annotation at the class-level of the test case in combination with `suppressConstructorCode(EvilChild.class)` to suppress all constructors for the EvilChild class.
  # Use the `Whitebox.newInstance(ClassWithEvilConstructor.class)` method to instantiate a class without invoking the constructor what so ever.
  # Use the `@SuppressStaticInitializationFor("org.mycompany.ClassWithEvilStaticInitializer")` annotation to remove the static initializer for the the `org.mycompany.ClassWithEvilStaticInitializer` class.
  # Use the `@PrepareForTest(ClassWithEvilMethod.class)` annotation at the class-level of the test case in combination with `suppressMethodCode(ClassWithEvilMethod.class, "methodName")` to suppress the method with name "methodName" in the ClassWithEvilMethod class.

=== Example ===

=== References === 
  * [http://code.google.com/p/powermock/source/browse/trunk/examples/DocumentationExamples/src/test/java/powermock/examples/suppress/constructor/ExampleWithEvilChildTest.java ExampleWithEvilChildTest]
  * [http://code.google.com/p/powermock/source/browse/trunk/examples/DocumentationExamples/src/test/java/powermock/examples/suppress/constructor/ExampleWithEvilConstructorTest.java ExampleWithEvilConstructorTest]
  * [http://code.google.com/p/powermock/source/browse/trunk/examples/DocumentationExamples/src/test/java/powermock/examples/suppress/method/ExampleWithEvilMethodTest.java ExampleWithEvilMethodTest]
  * [http://code.google.com/p/powermock/source/browse/trunk/examples/DocumentationExamples/src/test/java/powermock/examples/suppress/staticinitializer/ExampleWithEvilStaticInitializerTest.java ExampleWithEvilStaticInitializerTest]
  * [http://code.google.com/p/powermock/source/browse/trunk/examples/DocumentationExamples/src/main/java/powermock/examples/finalmocking/StateHolder.java StateHolder]